application:
  name: "spring-boot-scala-example"
  description: "An example Spring Boot app using Scala"

server:
  port: 8080

management:
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: "*"
  endpoint:
    metrics:
      enabled: true
    health:
      enabled: true
      show-details: always

logging:
  file:
    name: logs/spring-boot-scala-recipeservice.log
  level:
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
      springframework:
        jdbc:
          core:
            JdbcTemplate: DEBUG
            StatementCreatorUtils: TRACE

springdoc:
  api-docs:
    path: /v3/api-docs
  path: /swagger-ui.html
  swagger-ui:
    operationsSorter: method

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/recipe
    username: grego
    password: springboot
    jetty:
      max-wait: 10000
      max-active: 50
      test-on-borrow: true
  jdbc:
    template:
      max-rows: 500
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
        hibernate:
          format_sql: true
          dialect: org.hibernate.dialect.PostgreSQLDialect
  data:
    elasticsearch:
      client:
        endpoints: ${ELASTIC_ADDRESS:localhost}:${ELASTIC_PORT:9200}
        username: elastic
        password: springboot
      repositories:
        enables: true
      cluster-nodes: ${ELASTIC_ADDRESS:localhost}:${ELASTIC_PORT:9200}
      cluster-name: elasticsearch

  elasticsearch:
    rest:
      uris: https://localhost:9200

service:
  default_page_size: 20
  query_read_timeout: 1000
  query_write_timeout: 1000
